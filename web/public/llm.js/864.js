import*as e from"./wasm/llama2.js";var t={d:(e,o)=>{for(var a in o)t.o(o,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:o[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const o=(a={default:()=>e.default},n={},t.d(n,a),n);var a,n;function l(e,t){const o=new XMLHttpRequest;o.open("GET",e,!0),o.responseType="arraybuffer",o.onload=e=>{const a=o.response;if(a){const e=new Uint8Array(a);t(e)}},o.send(null)}const s=[/main:.*/,/.*_model_load:.*/];let r;const d=e=>{console.log("model:"+e),(e=>{for(var t=0;t<s.length;t+=1)if(s[t].test(e))return!1;return!0})(e)&&postMessage({event:3,line:e})};self.addEventListener("message",(e=>{switch(e.data.event){case 0:(async(e,t)=>{const a={noInitialRun:!0,print:d};r=await(0,o.default)(a);const n=e=>{r.FS_createDataFile("/models","tokenizer.bin",e,!0,!0,!0),postMessage({event:1}),console.log("tokenizer loaded")};l(e,(e=>{r.FS_createPath("/","models",!0,!0),r.FS_createDataFile("/models","model.bin",e,!0,!0,!0),console.log("model: Loaded"),null!=t?l(t,n):postMessage({event:1})}))})(e.data.url,e.data.tokenizer_url);break;case 2:((e,t,o,a,n,l,s,d)=>{console.log(t);const i=["/models/model.bin","-i",e.toString(),"-n",o.toString(),"-p",n.toString(),"-t",l.toString(),"-v","/models/tokenizer.bin"];console.log("model: calling main..."),r.callMain(i),postMessage({event:4}),console.log("model: Completed")})(e.data.prompt,e.data.seed,e.data.max_token_len,e.data.top_k,e.data.top_p,e.data.temp,e.data.repeat_last_n,e.data.repeat_penalty)}}),!1);