**server/...

Do we want to set up as services?  
https://medium.com/codex/setup-a-python-script-as-a-service-through-systemctl-systemd-f0cc55a42267

**web/public/analyze.html
Need ability to fix the transcription ideally.  
but dont think I want to deal with that now, due to the way the process works.  
Not sure how important this is.  


**server/
Need to make servers more robust.  
Unexpected queries shouldnt cause problems.  

sudo systemctl start transcription.service
sudo systemctl start tts.service

***
**extensions/mrrubato/
when decreasing frame rate, how do we capture audio, just use speed up algorithm?  
No should use detect audio dB level of capture, and cut low dB, then speed up.  
Responding to other youtube videos should be easy.  
If active tab is youtube link or watch link, 
need function to respond or not, then if respond is active, should comment on that video via API.  
Just use text from recording and generate a link to the resulting recording which will be on mrrubato instance.  
***

**language
create language "xxxxx" (xxx is spoken, continue with key definition)
select language "xxxxx" (spoken or keys)
create word "xxxx" (xxx is spoken, continue with key definition)
"xxxx" (usage of word is just like any other predefined meta)
first search meta language, then search used language.  
meta language only searched if 48, 49, 71, 72 utilized.  
These will be control keys.  
Otherwise pass to the selected language.  
For now this doesnt leave us much room, but enough.  
Unfortunately it will be hard to generate pleasing combinations.  

**extensions
ROLI: Top of Keys = control
bottom of keys = free


**web/public/analyze.html
Show topics/add topics.  
Make suggestion list of topics (some work needed), easy interface to just click add/remove.  

DB need top folder /topics
/topics/topicname/topicvalue/YYYYMMdd/videoid
relevance: 90%

author, name, other
for now.  
What data do we want here. mostly point back to videos.  Perhaps we want a date
Where we click on the topic will indicate the relevance for the video.  
Dont have multiple clicks for this.  
Feedback in some sort of color indication (or bar)

For now need to be admin to create topic or word definitions.  

**timestep.py 
pass all topics to **server/transcription


**petunia 
Need a second server (useyoutube=false), need to complete this.  
This will allow for more participation.  

**web/public/search.html
Search/Chat, and also with connected instances.  


**database.rules
test comments from other user.  


**languages/ or extensions/keydict
Need to have point function and basic attention markers BBOX, Oval, Arrow etc.  
start recording and pause recording may also need to pause the original screen simultaneously as well.  
Yes probably.  

ROLI hope it has good midi/API access.  
Hope the quality of the device is good.  

**web/public/analyze.html
Need color picker/icon picker for display of words.  
-put this in the datatable with words.  

Need user icon somewhere.  
-put this in the large pianoroll view.  

Need dropdown datatable filter for lang
-words datatable
--done

Need edit mode as well as feedback mode.  
Pause should always be part of meta-language.  
When playing segments, should be able to edit at a keytouch.  
use "wordtimes" parameters.  
But use the filters (only language, word, user)
Push the whole midi structure

Dynamically calculate lead-in and trail-off.  
But have minimum time 

Word creation, word edit.  
Play all by word or by user.  
What is constitutes a segment?  
Need pre/post buffer of X seconds.  

**TTS/TTS/bin/synthesize.py
Finally got something out of this 180k steps in training:
python3 ./TTS/TTS/bin/synthesize.py --text "I am determined to acquire language." --model_path "./TTS/recipes/ljspeech/tacotron2-DCA/run-April-19-2024_02+00AM-0000000/best_model.pth" --config_path "./TTS/recipes/ljspeech/tacotron2-DCA/run-April-19-2024_02+00AM-0000000/config.json"


**generate/tennis.py
Should make sure we can go through the same video and identify aspects in time separately.  
footsteps then bounces then ....

**extensions/handsfree
Each tab should identify content in some meaningful way
in addition to the QR code for url
Perhaps adjust the QR Code based on time salted with the URL each X seconds.  
For now just include the time in the QR Code.  
Include title perhaps, or truncated title up to 200 chars.  
youtube tv, utilize the 
tv.youtube.com/watch/xxxxxxx
xxxxx = Video ID.  

Special case for Youtube.  
Can we retrieve details about a youtube video via javascript without API key?  
https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=DQ5w8LBI0kI&key=[YOUR_API_KEY]

We already have the embed into the page in this case.  
Should be another way to get the details about the video, what javascript funciton do they use?  

Or just use the     
https://tv.youtube.com/watch/NgpFsmdsmyE?onboard=1&vp=0gEEEgIwAQ%3D%3D
https://tv.youtube.com/sw.js

ytcfg.set...
"INNERTUBE_API_KEY": "AIzaSyD-L7DIyuMgBk-B4DYmjJZ5UG-D6Y-vkMc
INNERTUBE_CONTEXT
"ACCOUNTS"
YTU_EMBEDDED_DATA
ytuEmbeddedData

and create the javascript calls necessary to go to the above URL.  

This is a bit of work.  
Also not sure if this will actually work.  
If we do this, do just this use-case (Youtube TV) to get a feel for if it will work.  

var id = 'dQw4w9WgXcQ';
var url = 'https://www.youtube.com/watch?v=' + id;

$.getJSON('https://noembed.com/embed',
    {format: 'json', url: url}, function (data) {
    alert(data.title);
});



Not enough hands.  

**web/public/analyze.html
Should be able to add a link to feedback easily.  
i.e. for enhancement/bug system.  
Should probably have a registered JIRA (or equivalent), and add link to any tickets referenced.  

